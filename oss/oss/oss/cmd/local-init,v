head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2006.08.24.22.52.29;	author angel;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.09.01.14.39;	author angel;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.04.20.11.17;	author angel;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.04.03.23.35;	author angel;	state Exp;
branches;
next	1.5;

1.5
date	2006.08.03.02.56.46;	author angel;	state Exp;
branches;
next	1.4;

1.4
date	2006.07.25.19.42.47;	author qli;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.14.19.13.46;	author zz;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.14.01.47.12;	author zz;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.10.02.00.22;	author angel;	state Exp;
branches;
next	;


desc
@@


1.9
log
@OSS: Add config parameter CC_PAYMENT_URL.
@
text
@#!/bin/sh

PKG=/opt/broadon/pkgs/oss
DATA=/opt/broadon/data/svcdrv
PROP=BBserver.properties
NOARPCTL=/opt/broadon/pkgs/netutil/bin/noarpctl
SSL=/opt/broadon/data/oss/ssl

sys_net_dev=`/sbin/printconf sys.net.dev`
act_oss=`/sbin/printconf sys.act.oss`
act_oss=${act_oss// /@@@@}
act_lb=`/sbin/printconf sys.act.lb`
act_lb=${act_lb// /@@@@}

#
# The activation variable is of the form:
# act_value;key1=value1;key2=value2 ...
#
parse_attributes() {
    # remove the leading part up to the first ';'
    config=${act_oss#*;}
    if [ "$act_oss" != "$config" ]; then
	# we do have attribute to handle
	oldIFS=$IFS
	IFS=';'
	# for each token of the form x=y, replace the '=' by a space and then
	# set the config variable to it.
	for i in $config; do
	    IFS=$oldIFS
	    kv=(`echo ${i/=/' '}`)
	    /sbin/setconf ${kv[0]} "${kv[1]//@@@@/' '}"
	    IFS=';'
	done
	IFS=$oldIFS
    fi
}


configure() {
    cp $PKG/conf/oss.conf $DATA/conf/httpd
    cp $PKG/conf/oss.xml $DATA/webapps
    mkdir -p $DATA/webapps/oss
    cp -a $PKG/webapps/oss.war $DATA/webapps
    cp -a $PKG/htdocs $DATA/htdocs/oss
    mkdir -p $DATA/htdocs/oss/logs
    cat $PKG/conf/log4j.properties >> $DATA/conf/log4j.properties
    
    db_url=`/sbin/printconf oss.db.url`
    db_user=`/sbin/printconf oss.db.user`
    db_password=`/sbin/printconf oss.db.password`
    ext_content_prefix_url=`/sbin/printconf oss.ext.content_prefix_url`
    ext_uncached_content_prefix_url=`/sbin/printconf oss.ext.uncached_content_prefix_url`
    ecs_url=`/sbin/printconf oss.ecs.url`
    ias_url=`/sbin/printconf oss.ias.url`
    cc_payment_url=`/sbin/printconf oss.cc.payment.url`
    ext_ecs_url=`/sbin/printconf oss.ext.ecs.url`
    ext_ias_url=`/sbin/printconf oss.ext.ias.url`

    if [ -z "$db_url" ] ||	\
       [ -z "$db_user" ] ||	\
       [ -z "$db_password" ] || \
       [ -z "$ext_content_prefix_url" ] || \
       [ -z "$ecs_url" ] || \
       [ -z "$ext_ecs_url" ] || \
       [ -z "$ext_ias_url" ] ; then
       echo "Missing oss config. variables"
       exit 1
    fi

    sed -e "s/@@@@DB_URL@@@@/$db_url/"		\
        -e "s/@@@@DB_USER@@@@/$db_user/"		\
        -e "s/@@@@DB_PASSWORD@@@@/$db_password/"	\
        -e "s|@@@@EXT_CONTENT_PREFIX_URL@@@@|$ext_content_prefix_url|" 	        \
        -e "s|@@@@EXT_UNCACHED_CONTENT_PREFIX_URL@@@@|$ext_uncached_content_prefix_url|" 	        \
        -e "s|@@@@ECS_URL@@@@|$ecs_url|" 	        \
        -e "s|@@@@IAS_URL@@@@|$ias_url|" 	        \
        -e "s|@@@@CC_PAYMENT_URL@@@@|$cc_payment_url|" 	        \
        -e "s|@@@@EXT_ECS_URL@@@@|$ext_ecs_url|" 	        \
        -e "s|@@@@EXT_IAS_URL@@@@|$ext_ias_url|" 	        \
	    $PKG/conf/$PROP.tmpl > $DATA/webapps/oss/$PROP
    if [ $? != 0 ]; then
	exit 1
    fi
}


# if the OSS cert is not installed, use the system default
check_cert() {
    if [ ! -e ${SSL}/identity.pem ]; then
	mkdir -p $SSL
	chown root.root $SSL
	chmod 0711 $SSL
	ln -sf /flash/identity.pem ${SSL}/identity.pem
	ln -sf /flash/private_key.pem ${SSL}/private_key.pem
	ln -sf /flash/ca_chain.pem ${SSL}/ca_chain.pem
	ln -sf /flash/root_cert.pem ${SSL}/root_cert.pem
    fi
}


#
# Set the IP address used by this package.
#
set_ip() {
    IP=`host oss | sed -e 's/^.* //'`
    IPd=`echo ${IP} | sed -e 's/^.*\.//'`
    addrinfo=(`ifconfig $sys_net_dev | grep inet | sed -e 's/inet //'`)
    myaddr=${addrinfo[0]/*:/}
    bcast=${addrinfo[1]/*:/}
    netmask=${addrinfo[2]/*:/}

    # turn on "noarp" if I'm served by load-balancer
    if [ "$lb" = "p" ] || [ "$lb" = "s" ]; then
        ${NOARPCTL} add ${IP} ${myaddr}
    fi
    ifconfig $sys_net_dev:${IPd} ${IP} netmask ${netmask} broadcast ${bcast}
}

#
# Clear the IP address used by this package.
#
unset_ip() {
    IP=`host oss | sed -e 's/^.* //'`
    IPd=`echo ${IP} | sed -e 's/^.*\.//'`
    ifconfig $sys_net_dev:${IPd} down

    if [ "$lb" = "p" ] || [ "$lb" = "s" ]; then
        ${NOARPCTL} del ${IP}
    fi
}

start() {
    if [ "${act_oss%%;*}" != "1" ]; then
	exit 0
    fi

    # set up IP alias only if load balancer is not running
    if [ "${act_lb%%;*}" != "1" ] || ( [ "$lb" != "p" ] && [ "$lb" != "s" ] ); then
        set_ip
    fi
    configure
    check_cert
}

stop() {
    if [ "${act_lb%%;*}" != "1" ] || ( [ "$lb" != "p" ] && [ "$lb" != "s" ] ); then
        unset_ip
    fi
}


parse_attributes
lb=`/sbin/printconf oss.lb`

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    *)
	echo $"Usage: $0 {start|stop}"
esac
@


1.8
log
@OSS: Add parameters for external urls, rename images, only show titles available for purchase/rental.
@
text
@d55 1
d77 1
@


1.7
log
@OSS: Fix local-init
@
text
@d51 2
a52 1
    content_prefix_url=`/sbin/printconf oss.content_prefix_url`
d55 2
d61 1
a61 1
       [ -z "$content_prefix_url" ] || \
d63 2
a64 1
       [ -z "$ias_url" ] ; then
d72 2
a73 1
        -e "s|@@@@CONTENT_PREFIX_URL@@@@|$content_prefix_url|" 	        \
d76 2
@


1.6
log
@OSS: Add IAS URL, indicated new titles.
@
text
@d59 1
a59 1
       [ -z "$ecs_url" ] \
@


1.5
log
@CAS/OSS: Use images from CCS.
@
text
@d53 1
d59 2
a60 1
       [ -z "$ecs_url" ] ; then
d70 1
@


1.4
log
@Get network device from sys.net.dev instead of using eth0
@
text
@d51 1
a53 1

d57 1
d66 1
@


1.3
log
@add ecs wsdl url
@
text
@d9 1
d93 1
a93 1
    addrinfo=(`ifconfig eth0 | grep inet | sed -e 's/inet //'`)
d102 1
a102 1
    ifconfig eth0:${IPd} ${IP} netmask ${netmask} broadcast ${bcast}
d111 1
a111 1
    ifconfig eth0:${IPd} down
@


1.2
log
@support list transactions
@
text
@d50 1
a50 1
    ecs_url=`/sbin/printconf ecs.ets.url`
d64 1
a64 1
        -e "s|@@@@ETS_URL@@@@|$ecs_url|" 	        \
@


1.1
log
@Initial files for oss pkg
@
text
@d50 2
d55 2
a56 1
       [ -z "$db_password" ]; then
d64 1
@

